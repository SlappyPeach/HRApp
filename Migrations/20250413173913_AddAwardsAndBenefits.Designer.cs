// <auto-generated />
using System;
using HRApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRApp.Migrations
{
    [DbContext(typeof(HRDbContext))]
    [Migration("20250413173913_AddAwardsAndBenefits")]
    partial class AddAwardsAndBenefits
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("HRApp.Models.AddEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EducationType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IntitutName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AddEducations");
                });

            modelBuilder.Entity("HRApp.Models.AdditionalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AdditionalInfos");
                });

            modelBuilder.Entity("HRApp.Models.Agreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AgreementDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AgreementEndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaySystem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Probation")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Salary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("HRApp.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GrantedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Awards");
                });

            modelBuilder.Entity("HRApp.Models.BusinessTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TripEndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TripStartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BusinessTrips");
                });

            modelBuilder.Entity("HRApp.Models.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("NextDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Resolution")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("HRApp.Models.CitizenshipOKIN", b =>
                {
                    b.Property<string>("OKIN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OKIN");

                    b.ToTable("CitizenshipOKINs");
                });

            modelBuilder.Entity("HRApp.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Certificate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("HRApp.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocSerial")
                        .HasColumnType("TEXT");

                    b.Property<string>("EducationType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("HRApp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Address1Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BIK")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BirthPlaceOKATO")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CitizenshipOKIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DismissalDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FamilyStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Index1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Index2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KPP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Korschet")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomerScheta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PassportDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassportPlace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassportType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResumePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("SNILS")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HRApp.Models.EmploymentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkPlaceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmploymentHistories");
                });

            modelBuilder.Entity("HRApp.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BirthYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Relation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("HRApp.Models.ForeignLanguage", b =>
                {
                    b.Property<string>("OKIN")
                        .HasColumnType("TEXT");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OKIN");

                    b.ToTable("ForeignLanguages");
                });

            modelBuilder.Entity("HRApp.Models.IncomingDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("DestinationCheck")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DestinationData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IncomingDocuments");
                });

            modelBuilder.Entity("HRApp.Models.InternalDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SheetsNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShortInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("InternalDocuments");
                });

            modelBuilder.Entity("HRApp.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OKIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OKINLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("HRApp.Models.LanguageLevel", b =>
                {
                    b.Property<string>("OKIN")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OKIN");

                    b.ToTable("LanguageLevels");
                });

            modelBuilder.Entity("HRApp.Models.Marriage", b =>
                {
                    b.Property<string>("OKIN")
                        .HasColumnType("TEXT");

                    b.Property<string>("MarriageState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OKIN");

                    b.ToTable("Marriages");
                });

            modelBuilder.Entity("HRApp.Models.MilitaryRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountingGroup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Compound")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeregistrationNote")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MilitaryService")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MillitaryOffice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecAccounting")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StockCategory")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VYS")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MilitaryRegistrations");
                });

            modelBuilder.Entity("HRApp.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HRApp.Models.OutgoingDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SheetsNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShortInfo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OutgoingDocuments");
                });

            modelBuilder.Entity("HRApp.Models.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("HRApp.Models.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Main")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProfessionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkPlace")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("HRApp.Models.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("HRApp.Models.QualificationTraining", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hours")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Institut")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("QualificationTrainings");
                });

            modelBuilder.Entity("HRApp.Models.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoginUser")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordUser")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Registers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LoginUser = "Admin",
                            PasswordUser = "admin"
                        });
                });

            modelBuilder.Entity("HRApp.Models.RegisterDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RegisterDocuments");
                });

            modelBuilder.Entity("HRApp.Models.Retraining", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Retrainings");
                });

            modelBuilder.Entity("HRApp.Models.SickLeave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MedStateName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkFrom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SickLeaves");
                });

            modelBuilder.Entity("HRApp.Models.SocialBenefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SocialBenefits");
                });

            modelBuilder.Entity("HRApp.Models.TimeSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DaysPerWeek")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("HourPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("HoursWeek1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HoursWeek2")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimeSheetCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TimeSheets");
                });

            modelBuilder.Entity("HRApp.Models.TimeSheetCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Day")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeSheetCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TimeSheetCalendars");
                });

            modelBuilder.Entity("HRApp.Models.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CalendarDaysNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("VacationType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkFrom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("HRApp.Models.Award", b =>
                {
                    b.HasOne("HRApp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRApp.Models.Course", b =>
                {
                    b.HasOne("HRApp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRApp.Models.SocialBenefit", b =>
                {
                    b.HasOne("HRApp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
